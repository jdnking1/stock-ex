name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Download Boost Artifact
      id: boost-artifact
      uses: actions/download-artifact@v3
      with:
        name: boost-${{ matrix.os }}
        path: boost-artifact
      continue-on-error: true

    - name: Extract Boost Artifact
      if: steps.boost-artifact.outcome == 'success'
      run: |
        echo "Extracting Boost from artifact..."
        tar -xvf boost-artifact/boost.tar.gz -C $HOME || mkdir -p $HOME/boost-install-dir
        if [ "${{ runner.os }}" == "Windows" ]; then
          tar -xvf boost-artifact/boost.tar.gz -C C:/boost-install-dir
        fi
        ls $HOME/boost-install-dir || ls C:/boost-install-dir

    - name: Install Boost (Linux)
      if: runner.os == 'Linux' && steps.boost-artifact.outcome != 'success'
      run: |
        curl -L https://boostorg.jfrog.io/artifactory/main/release/1.87.0/source/boost_1_87_0.tar.gz -o boost.tar.gz
        tar -xf boost.tar.gz
        cd boost_1_87_0
        ./bootstrap.sh
        ./b2 install --prefix=~/boost-install-dir

    - name: Install Boost (Windows)
      if: runner.os == 'Windows' && steps.boost-artifact.outcome != 'success'
      run: |
        curl -L https://boostorg.jfrog.io/artifactory/main/release/1.87.0/source/boost_1_87_0.zip -o boost.zip
        tar -xf boost.zip
        cd boost_1_87_0
        bootstrap.bat
        b2.exe install --prefix=C:/boost-install-dir

    - name: Save Boost as Artifact
      if: steps.boost-artifact.outcome != 'success'
      uses: actions/upload-artifact@v3
      with:
        name: boost-${{ matrix.os }}
        path: |
          ~/boost-install-dir
          C:/boost-install-dir
        retention-days: 90

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        if [ "${{ runner.os }}" == "Linux" ]; then
          echo "boost-root=~/boost-install-dir" >> "$GITHUB_OUTPUT"
        else
          echo "boost-root=C:/boost-install-dir" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DBOOST_ROOT=${{ steps.strings.outputs.boost-root }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}/test
      run: ctest --build-config ${{ matrix.build_type }}
