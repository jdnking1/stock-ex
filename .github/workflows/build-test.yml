name: build-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4
    
    - name: Install deps
      run: >
        sudo apt-get -y update && sudo apt-get -y install git libssl-dev libmysqlclient-dev libpq-dev
       
    - name: Install Poco
      run: |
        sudo apt-get -y update && sudo apt-get -y install git libssl-dev libmysqlclient-dev libpq-dev
        git clone -b main https://github.com/pocoproject/poco.git
        cd poco
        mkdir cmake-build
        cd cmake-build
        cmake ..
        cmake --build . --config Release
        echo "Poco_FOUNDATION_INCLUDE=${{ github.workspace }}/poco/Foundation/include" >> $GITHUB_ENV
        echo "Poco_NET_INCLUDE=${{ github.workspace }}/poco/Net/include" >> $GITHUB_ENV

    
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        echo "poco-dir=${{ github.workspace }}/poco/cmake-build/Poco" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DPoco_DIR=${{ steps.strings.outputs.poco-dir }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      if: always()
      run: |
        if [ -d "${{ steps.strings.outputs.build-output-dir }}/test" ]; then
          ctest --test-dir ${{ steps.strings.outputs.build-output-dir }}/test --build-config ${{ matrix.build_type }}
        else
          echo "Test directory not found. Skipping tests."
        fi
